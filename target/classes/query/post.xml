<?xml version="1.0" encoding="euc-kr"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="p">

    <!-- 게시판 등록  -->
    <insert id="save_post" parameterType="post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            post
        (
          title
        , content
        , file_path
        , created_date
        , creator
        , modified_date
        , modifier
        , views
        , category_name
        )

        VALUES(
                  #{title}
              , #{content}
              , #{filePath}
              , datetime('now', 'localtime')
              , #{creator}
              , datetime('now', 'localtime')
              , #{modifier}
              , 0
              , #{categoryName}
              )
    </insert>

    <!-- 첨부파일 저장  -->
    <insert id="save_file" parameterType="file" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            attachment_file
        (
            post_number
        , uuid_name
        , file_name
        , created_date
        , creator
        , modified_date
        , modifier
        )

        VALUES(
                  #{postNumber}
              , #{uuidName}
              , #{fileName}
              , datetime('now', 'localtime')
              , #{creator}
              , #{modifiedDate}
              , #{modifier}
              )
    </insert>

    <!-- 첨부파일 조회-->
 <select id="get_file" parameterType="int" resultType="file">
     SELECT id
          , post_number as postNumber
          , uuid_name as uuidName
          , file_name as fileName
          , created_date as createdDate
          , creator
          , modified_date as modifiedDate
          , modifier

     FROM attachment_file WHERE post_number=#{id}
 </select>

    <!-- 게시글 하나 조회-->
    <select id="selectById" parameterType="int" resultType="post">
        SELECT id
               , title
               , content
               , file_path as filePath
               , strftime('%Y-%m-%d %H:%M',created_date) as createdDate
               , creator
               , strftime('%Y-%m-%d %H:%M',modified_date) as modifiedDate
               , modifier
               , views
               , category_name as categoryName
        FROM post WHERE id=#{id}
    </select>

    <!-- 게시글 전체 조회-->
    <select id="selectList" resultType="post">
        SELECT id
               , title
               , content
               , file_path as filePath
               , strftime('%Y-%m-%d %H:%M',created_date) as createdDate
               , creator
               , strftime('%Y-%m-%d %H:%M',modified_date) as modifiedDate
               , modifier
               , views
               , category_name as categoryName
         FROM post
        order by id desc
    </select>

    <!-- post_hashtag(중간다리) 저장 -->
    <insert id="save_post_hashtag" parameterType="postHashTag" useGeneratedKeys="true" keyProperty="hashtag_id">
        INSERT INTO
            post_hashtag
        (
            post_id
        )

        VALUES(
                    #{post_id}
              )
    </insert>

    <!-- 해시태그 저장 -->
    <insert id="save_hashtag" parameterType="HashTag" useGeneratedKeys="true" keyProperty="hashtag_id">
        INSERT INTO
            hashtag
        (
            hashtag_id,
            hashtag_cont
        )

        VALUES(
                #{id},
                #{content}
              )
    </insert>

    <!-- 해시태그 조회 -->
    <select id="get_hashtag" parameterType="int" resultType="HashTag">
        SELECT hashtag.hashtag_cont as content
        FROM post_hashtag
        JOIN hashtag
        ON post_hashtag.hashtag_id = hashtag.hashtag_id
        WHERE post_id = #{post_id}
    </select>

    <!-- 조회수 업데이트-->
    <update id="update_views" parameterType="int">
        UPDATE post SET
        views = views + 1
        WHERE id = #{id}
    </update>

    <!-- 카테고리 등록-->
    <insert id="save_category" parameterType="Category">
        INSERT INTO
            category
        (
         category_name,
         is_use,
         orders
        )

        VALUES(
               #{categoryName},
               #{isUse},
               #{orders}
              )
    </insert>

    <!-- 카테고리 한개조회-->
    <select id="get_category" parameterType="String" resultType="Category">
         SELECT id,
                category_name as categoryName,
                is_use as isUse,
                orders
        FROM category
        WHERE category_name = #{category_name}
    </select>

    <!-- 카테고리 전부조회-->
    <select id="get_all_category" resultType="Category">
        SELECT id,
               category_name as categoryName,
               is_use as isUse,
               orders
        FROM category
    </select>

</mapper>